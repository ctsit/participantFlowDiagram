[{"path":"/articles/Getting-Started.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Getting Started","text":"participantFlowDiagram helps study team find issues progress study participants research protocol graphically presenting summary data progress. designed show complexity flow summary state participants little code possible. create_mermaid_diagram() represents data graphically: create_table() represents data table:","code":""},{"path":"/articles/Getting-Started.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Getting Started","text":"Using participantFlowDiagram requires detailed dataset, participant_level_progress, documents step workflow. dataset multiple constraints: column must factor. level factor possible state step. factor define possible levels step. includes unknown level set logic level true. factor value needs unique across factors factor values nodes names diagram. easy manage prefixing factor level column name. steps appear order workflow order governs order table. required, improve readability summary table. step, count non-null values equal count parent node. package provides example dataset, consent_tracking_data.csv describes multi-step recruiting, eligibility consent workflow. dataset conforms constraints. second required dataset small, two-column dataset names parent node child step step project. third dataset, pretty_labels, can generated package function get_pretty_labels_template() output get_pretty_labels_template() can used -inputs create_mermaid_diagram() create_table(). labels plain labels taken factor levels column names. Putting together, code looks like : generates diagram plain labels. get control labels, save output get_pretty_labels_template() edit pretty_label column. can write tribble code using timesaveR::to_tribble() write tribble code paste inline code. get_pretty_labels_template() uses value plain_label pretty_label. Edit pretty_label column needed. Use \\n get new line characters wrap text pretty labels diagram. newline codes ignored table. labels produce diagram table Overview.","code":"consent_tracking_data <- readr::read_csv(\"consent_tracking_data.csv\") |>   dplyr::mutate(dplyr::across(dplyr::everything(), as.factor))  consent_tracking_data |> str() #> tibble [400 × 5] (S3: tbl_df/tbl/data.frame) #>  $ interest              : Factor w/ 2 levels \"interest_no\",..: 2 1 2 2 2 2 1 2 1 2 ... #>  $ eligibility_scheduling: Factor w/ 4 levels \"eligibility_scheduling_ltfu\",..: 2 NA 4 4 4 1 NA 4 NA 4 ... #>  $ eligibility           : Factor w/ 4 levels \"eligibility_ltfu\",..: NA NA 2 4 4 NA NA 1 NA 4 ... #>  $ consent_scheduling    : Factor w/ 3 levels \"consent_scheduling_ltfu\",..: NA NA NA 3 3 NA NA NA NA 3 ... #>  $ consent               : Factor w/ 3 levels \"consent_no\",\"consent_unknown\",..: NA NA NA 3 3 NA NA NA NA 3 ... steps #> # A tibble: 5 × 2 #>   parent                         child                  #>   <chr>                          <chr>                  #> 1 Approached                     interest               #> 2 interest_yes                   eligibility_scheduling #> 3 eligibility_scheduling_willing eligibility            #> 4 eligibility_yes                consent_scheduling     #> 5 consent_scheduling_yes         consent pretty_labels_template <- get_pretty_labels_template(   participant_level_progress = consent_tracking_data,   parents = steps$parent,   children = steps$child )  pretty_labels_template #> # A tibble: 21 × 4 #>    variable               row_type plain_label                      pretty_label #>    <chr>                  <chr>    <chr>                            <chr>        #>  1 interest               label    interest                         interest     #>  2 interest               level    interest_no                      interest_no  #>  3 interest               level    interest_yes                     interest_yes #>  4 eligibility_scheduling label    eligibility_scheduling           eligibility… #>  5 eligibility_scheduling level    eligibility_scheduling_ltfu      eligibility… #>  6 eligibility_scheduling level    eligibility_scheduling_unknown   eligibility… #>  7 eligibility_scheduling level    eligibility_scheduling_unwilling eligibility… #>  8 eligibility_scheduling level    eligibility_scheduling_willing   eligibility… #>  9 eligibility            label    eligibility                      eligibility  #> 10 eligibility            level    eligibility_ltfu                 eligibility… #> # ℹ 11 more rows consent_tracking_data <- readr::read_csv(\"consent_tracking_data.csv\") |>   dplyr::mutate(dplyr::across(dplyr::everything(), as.factor))  # Name the parent node and family name of the children at each step steps <- dplyr::tribble(   ~parent,                           ~child,   \"Approached\",                      \"interest\",   \"interest_yes\",                    \"eligibility_scheduling\",   \"eligibility_scheduling_willing\",  \"eligibility\",   \"eligibility_yes\",                 \"consent_scheduling\",   \"consent_scheduling_yes\",          \"consent\" )  pretty_labels <- get_pretty_labels_template(   participant_level_progress = consent_tracking_data,   parents = steps$parent,   children = steps$child )  diagram <- create_mermaid_diagram(   participant_level_progress = consent_tracking_data,   parents = steps$parent,   children = steps$child,   pretty_labels = pretty_labels) pretty_labels_template <- get_pretty_labels_template(   participant_level_progress = consent_tracking_data,   parents = steps$parent,   children = steps$child )  # Uncomment this code and run it to turn the pretty_labels_template # into dplyr::tribble() code. Paste the tribble code below assigning # it to the object \"pretty_labels\", re-comment these lines, # then edit the text in the new_label column to make the pretty # labels you'd like to see in the gtsummary table and the mermaid diagram. # # devtools::install_github(\"LukasWallrich/timesaveR\") # pretty_labels_template |> #   timesaveR::to_tribble(show = T)  pretty_labels <- tibble::tribble(   ~variable,                 ~row_type, ~plain_label,                        ~pretty_label,                           \"interest\",                \"label\",   \"interest\",                          \"Interest\",                             \"interest\",                \"level\",   \"interest_no\",                       \"Not Interested\",                          \"interest\",                \"level\",   \"interest_yes\",                      \"Interested\",                         \"eligibility_scheduling\",  \"label\",   \"eligibility_scheduling\",            \"Eligibility Scheduling\",               \"eligibility_scheduling\",  \"level\",   \"eligibility_scheduling_ltfu\",       \"Lost to follow-up\",          \"eligibility_scheduling\",  \"level\",   \"eligibility_scheduling_unknown\",    \"Unknown\",       \"eligibility_scheduling\",  \"level\",   \"eligibility_scheduling_unwilling\",  \"Unwilling to\\n schedule\",     \"eligibility_scheduling\",  \"level\",   \"eligibility_scheduling_willing\",    \"Willing to\\n schedule\",       \"eligibility\",             \"label\",   \"eligibility\",                       \"Eligibility\",                          \"eligibility\",             \"level\",   \"eligibility_ltfu\",                  \"Lost to followup\",                     \"eligibility\",             \"level\",   \"eligibility_no\",                    \"Ineligible\",                       \"eligibility\",             \"level\",   \"eligibility_unknown\",               \"Eligibility \\nunknown\",                  \"eligibility\",             \"level\",   \"eligibility_yes\",                   \"Eligible\",                      \"consent_scheduling\",      \"label\",   \"consent_scheduling\",                \"Consent Scheduling\",                   \"consent_scheduling\",      \"level\",   \"consent_scheduling_ltfu\",           \"Lost to \\nfollowup\",              \"consent_scheduling\",      \"level\",   \"consent_scheduling_unknown\",        \"Unknown\",           \"consent_scheduling\",      \"level\",   \"consent_scheduling_yes\",            \"Scheduled\",               \"consent\",                 \"label\",   \"consent\",                           \"Consent\",                              \"consent\",                 \"level\",   \"consent_no\",                        \"Did not \\nconsent\",                           \"consent\",                 \"level\",   \"consent_unknown\",                   \"Unknown\",                      \"consent\",                 \"level\",   \"consent_yes\",                       \"Consented\" )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Philip Chase. Author, maintainer. Sai Pavan Kamma. Author. Laurence James-Woodley. Author. Taryn Stoffs. Contributor. Christopher Barnes. Contributor. Kathryn Carpenter. Contributor. Natalie Williams. Contributor. Raymond Balise. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chase P, Kamma S, James-Woodley L (2025). participantFlowDiagram: Graphically shows progress research participants study protocol. R package version 0.1.2, https://ctsit.github.io/participantFlowDiagram/.","code":"@Manual{,   title = {participantFlowDiagram: Graphically shows the progress of research participants through a study protocol},   author = {Philip Chase and Sai Pavan Kamma and Laurence James-Woodley},   year = {2025},   note = {R package version 0.1.2},   url = {https://ctsit.github.io/participantFlowDiagram/}, }"},{"path":"/index.html","id":"participantflowdiagram","dir":"","previous_headings":"","what":"Graphically shows the progress of research participants through a study protocol","title":"Graphically shows the progress of research participants through a study protocol","text":"participantFlowDiagram R package helps study team find issues progress study participants research protocol graphically presenting summary data progress. provide dataframe factors describe step workflows study, can generate graphs like :","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Graphically shows the progress of research participants through a study protocol","text":"can install development version participantFlowDiagram GitHub :","code":"# install.packages(\"pak\") pak::pak(\"ctsit/participantFlowDiagram\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Graphically shows the progress of research participants through a study protocol","text":"’s basic example using participantFlowDiagram: details, see Getting Started","code":"library(participantFlowDiagram)  consent_tracking_data <- readr::read_csv(\"vignettes/articles/consent_tracking_data.csv\") |>   dplyr::mutate(dplyr::across(dplyr::everything(), as.factor))  steps <- dplyr::tribble(   ~parent,                           ~child,   \"Approached\",                      \"interest\",   \"interest_yes\",                    \"eligibility_scheduling\",   \"eligibility_scheduling_willing\",  \"eligibility\",   \"eligibility_yes\",                 \"consent_scheduling\",   \"consent_scheduling_yes\",          \"consent\" )  pretty_labels <- get_pretty_labels_template(   participant_level_progress = consent_tracking_data,   parents = steps$parent,   children = steps$child )  create_mermaid_diagram(   participant_level_progress = consent_tracking_data,   parents = steps$parent,   children = steps$child,   pretty_labels = pretty_labels)"},{"path":"/reference/create_mermaid_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a diagram to show participant progress through a study workflow — create_mermaid_diagram","title":"Create a diagram to show participant progress through a study workflow — create_mermaid_diagram","text":"Create diagram show participant progress study workflow via counts study participants reach point study workflow. Create diagram diagram detailed dataframe, describing progress research participant, parent child relationships define study progression, pretty labels state step protocol.","code":""},{"path":"/reference/create_mermaid_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a diagram to show participant progress through a study workflow — create_mermaid_diagram","text":"","code":"create_mermaid_diagram(   participant_level_progress,   parents,   children,   pretty_labels,   render = TRUE )"},{"path":"/reference/create_mermaid_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a diagram to show participant progress through a study workflow — create_mermaid_diagram","text":"participant_level_progress detail dataframe describing progress research participant parents vector nodes diagram children children vector enumerating child categorical level corresponding parent pretty_labels dataframe defining pretty labels step factor level render logical indicate mermaid syntax rendered diagram syntax returned (default = TRUE)","code":""},{"path":"/reference/create_mermaid_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a diagram to show participant progress through a study workflow — create_mermaid_diagram","text":"plot study progress mermaid syntax generate ","code":""},{"path":"/reference/create_mermaid_diagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a diagram to show participant progress through a study workflow — create_mermaid_diagram","text":"","code":"if (FALSE) { # \\dontrun{ create_mermaid_diagram(   participant_level_progress = participant_level_progress,   parents = steps$parent,   children = steps$child,   pretty_labels = pretty_labels ) } # }"},{"path":"/reference/create_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table to summarize participant progress — create_table","title":"Create a table to summarize participant progress — create_table","text":"Create table showing counts study participants reached point study workflow","code":""},{"path":"/reference/create_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table to summarize participant progress — create_table","text":"","code":"create_table(participant_level_progress, children, pretty_labels)"},{"path":"/reference/create_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table to summarize participant progress — create_table","text":"participant_level_progress detail dataframe describing progress research participant children vector enumerating child categorical level corresponding parent pretty_labels dataframe defining pretty labels step factor level","code":""},{"path":"/reference/create_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table to summarize participant progress — create_table","text":"gtsummary::tbl_summary() object describes participant_level_progress using labels pretty_labels","code":""},{"path":"/reference/create_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a table to summarize participant progress — create_table","text":"","code":"if (FALSE) { # \\dontrun{ gtsummary_table <- create_table(participant_level_progress, pretty_labels) } # }"},{"path":"/reference/get_participant_level_progress_pretty.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace plain text labels with pretty labels in participant_level_progress — get_participant_level_progress_pretty","title":"Replace plain text labels with pretty labels in participant_level_progress — get_participant_level_progress_pretty","text":"Replace plain text labels pretty labels participant_level_progress preparation creating gtsummary table.","code":""},{"path":"/reference/get_participant_level_progress_pretty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace plain text labels with pretty labels in participant_level_progress — get_participant_level_progress_pretty","text":"","code":"get_participant_level_progress_pretty(   participant_level_progress,   pretty_labels )"},{"path":"/reference/get_participant_level_progress_pretty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace plain text labels with pretty labels in participant_level_progress — get_participant_level_progress_pretty","text":"participant_level_progress detail dataframe describing progress research participant pretty_labels data like returned get_pretty_labels_template(), pretty labels place templated values.","code":""},{"path":"/reference/get_participant_level_progress_pretty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace plain text labels with pretty labels in participant_level_progress — get_participant_level_progress_pretty","text":"dataframe structure participant_level_progress, pretty labels data fields place plain labels.","code":""},{"path":"/reference/get_participant_level_progress_pretty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace plain text labels with pretty labels in participant_level_progress — get_participant_level_progress_pretty","text":"","code":"if (FALSE) { # \\dontrun{   get_participant_level_progress_pretty(     participant_level_progress,     pretty_labels   ) } # }"},{"path":"/reference/get_pretty_labels_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataframe of steps and factor levels in the study workflow to facilitate label replacement — get_pretty_labels_template","title":"Create a dataframe of steps and factor levels in the study workflow to facilitate label replacement — get_pretty_labels_template","text":"Generate dataframe describing steps factor levels study workflow assist setting pretty labels step factor level.","code":""},{"path":"/reference/get_pretty_labels_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataframe of steps and factor levels in the study workflow to facilitate label replacement — get_pretty_labels_template","text":"","code":"get_pretty_labels_template(participant_level_progress, parents, children)"},{"path":"/reference/get_pretty_labels_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataframe of steps and factor levels in the study workflow to facilitate label replacement — get_pretty_labels_template","text":"participant_level_progress detail dataframe describing progress research participant parents vector nodes diagram children children vector enumerating child categorical level corresponding parent","code":""},{"path":"/reference/get_pretty_labels_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataframe of steps and factor levels in the study workflow to facilitate label replacement — get_pretty_labels_template","text":"data frame row step study one row factor level step. data frame columns: variable - factor level row_type - character string indicating row describes step factor values step plain_label - existing label derived step factor level pretty_label - pretty label use place label","code":""},{"path":"/reference/get_pretty_labels_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dataframe of steps and factor levels in the study workflow to facilitate label replacement — get_pretty_labels_template","text":"","code":"if (FALSE) { # \\dontrun{ get_pretty_labels_template(   participant_level_progress = progress_detail,   parents = steps$parent,   children = steps$child ) } # }"},{"path":"/reference/get_table_summary_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a named vector for relabeling a gtsummary table — get_table_summary_labels","title":"Create a named vector for relabeling a gtsummary table — get_table_summary_labels","text":"Get named vector can use relabel gtsummary table","code":""},{"path":"/reference/get_table_summary_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a named vector for relabeling a gtsummary table — get_table_summary_labels","text":"","code":"get_table_summary_labels(pretty_labels)"},{"path":"/reference/get_table_summary_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a named vector for relabeling a gtsummary table — get_table_summary_labels","text":"pretty_labels data like returned get_pretty_labels_template(), pretty labels place templated values.","code":""},{"path":"/reference/get_table_summary_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a named vector for relabeling a gtsummary table — get_table_summary_labels","text":"named vector pretty labels plain labels names","code":""},{"path":"/reference/get_table_summary_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a named vector for relabeling a gtsummary table — get_table_summary_labels","text":"","code":"if (FALSE) { # \\dontrun{   get_table_summary_labels(pretty_labels) } # }"},{"path":"/news/index.html","id":"participantflowdiagram-012-released-2025-07-09","dir":"Changelog","previous_headings":"","what":"participantFlowDiagram 0.1.2 (released 2025-07-09)","title":"participantFlowDiagram 0.1.2 (released 2025-07-09)","text":"Fix label example diagram table (@pbchase) Fix reference gtsummary::tbl_summary() (@pbchase)","code":""},{"path":"/news/index.html","id":"participantflowdiagram-011-released-2025-07-08","dir":"Changelog","previous_headings":"","what":"participantFlowDiagram 0.1.1 (released 2025-07-08)","title":"participantFlowDiagram 0.1.1 (released 2025-07-08)","text":"Update function documentation package (@pbchase, #1) Add ORCID, project URLs, DOI (@pbchase, #1)","code":""},{"path":"/news/index.html","id":"participantflowdiagram-010-released-2025-07-08","dir":"Changelog","previous_headings":"","what":"participantFlowDiagram 0.1.0 (released 2025-07-08)","title":"participantFlowDiagram 0.1.0 (released 2025-07-08)","text":"Initial release (@pbchase, @saipavan10-git, @ljwoodley) create_mermaid_diagram() create_table() get_pretty_labels_template() get_participant_level_progress_pretty() get_table_summary_labels() Getting-Started","code":""}]
